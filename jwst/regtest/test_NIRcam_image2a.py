import os
import pytest

from glob import glob
from astropy.io.fits.diff import FITSDiff

from jwst.pipeline import Image2Pipeline
from jwst.pipeline.collect_pipeline_cfgs import collect_pipeline_cfgs


@pytest.mark.bigdata
def test_NIRcam_image2a_cal(rtdata, fitsdiff_default_kwargs, _jail):
    """
        Check to make sure that the input and outout files exist and that they are not the
        same file.
    """

    rtdata.get_data("nircam/test_image2pipeline/jw00624009001_02101_00001_nrcalong_rate.fits")
    Image2Pipeline.call(rtdata.input, save_results=True)
    rtdata.output = "jw00624009001_02101_00001_nrcalong_cal.fits"

    rtdata.get_truth("truth/nircam/test_image2pipeline/jw00624009001_02101_00001_nrcalong_cal.fits")
    assert rtdata.output != rtdata.truth

    diff = FITSDiff(rtdata.output, rtdata.truth, **fitsdiff_default_kwargs)
    assert diff.identical, diff.report

@pytest.fixture(scope="module")
def run_pipeline(rtdata_module, jail):
    """Run calwebb_image2 pipeline on NIRCam imaging data. The config file is
        needed so that the intermediate results are saved."""
    rtdata = rtdata_module
    rtdata.get_data("nircam/test_image2pipeline/jw00624009001_02101_00001_nrcalong_rate.fits")

    collect_pipeline_cfgs('config')
    config_file = os.path.join('config', 'calwebb_image2.cfg')
    Image2Pipeline.call(rtdata.input, config_file=config_file,
                        save_results=True)

    return rtdata
@pytest.mark.bigdata
def test_NIRCam_image2a_completion(run_pipeline):
    """ Check that two files are generated by the pipeline."""
    files = glob('*_cal.fits')
    files += glob('*_i2d.fits')
    # There should be 2 outputs
    assert len(files) == 2


@pytest.mark.bigdata
@pytest.mark.parametrize("output", [
    'jw00624009001_02101_00001_nrcalong_cal.fits',
    'jw00624009001_02101_00001_nrcalong_i2d.fits',], ids=['cal', 'i2d'])
def test_NIRCam_image2a(run_pipeline, fitsdiff_default_kwargs, output):
    """
    Regression test of calwebb_image2 pipeline performed on NIRCam data.
    """
    rtdata = run_pipeline
    rtdata.output = output
    rtdata.get_truth(os.path.join("truth/nircam/test_image2pipeline", output))


    diff = FITSDiff(rtdata.output, rtdata.truth, **fitsdiff_default_kwargs)
    assert diff.identical, diff.report()
