""" Test for the detector1 pipeline using NIRCam data. This should take an uncal
    file and generate the stage 1 FITS files (rate, ratints, and trapsfilled)."""
import os
from glob import glob
import pytest

from astropy.io.fits.diff import FITSDiff
from jwst.pipeline import Detector1Pipeline

@pytest.mark.bigdata
def test_NIRcam_stage1_rate(rtdata, fitsdiff_default_kwargs, _jail):
    """
        Check to make sure that the input and outout files exist and that they are not the
        same file. Then verify that the pipeline output matches the truth file.
    """

    rtdata.get_data("nircam/test_detector1pipeline/jw82500001003_02101_00001_NRCALONG_uncal.fits")
    Detector1Pipeline.call(rtdata.input, steps={'jump': {'rejection_threshold': 150}},
                           save_results=True)
    rtdata.output = "jw82500001003_02101_00001_NRCALONG_rate.fits"

    rtdata.get_truth("truth/nircam/test_detector1pipeline/jw82500001003_02101_00001_NRCALONG_rate.fits")
    assert rtdata.output != rtdata.truth

    diff = FITSDiff(rtdata.output, rtdata.truth, **fitsdiff_default_kwargs)
    assert diff.identical, diff.report

@pytest.fixture(scope="module")
def run_pipeline(jail, rtdata_module):
    """Run calwebb_detector1 pipeline on NIRCam uncalibrated data. For these data the
       rejection_threshold is increased from the default of 4 to 150 to reduce the
       runtime to a managable level."""
    rtdata = rtdata_module
    rtdata.get_data("nircam/test_detector1pipeline/jw82500001003_02101_00001_NRCALONG_uncal.fits")

    Detector1Pipeline.call(rtdata.input, steps={'jump': {'rejection_threshold': 150}},
                           save_results=True)

    return rtdata

@pytest.mark.bigdata
def test_NIRCam_stage1_completion(run_pipeline):
    """ Check that three files are generated by the pipeline."""
    files = glob('*_rate.fits')
    files += glob('*_rateints.fits')
    files += glob('*_trapsfilled.fits')
    # There should be 3 outputs
    assert len(files) == 3


@pytest.mark.bigdata
@pytest.mark.parametrize("output", [
    'jw82500001003_02101_00001_NRCALONG_rate.fits',
    'jw82500001003_02101_00001_NRCALONG_rateints.fits',
    'jw82500001003_02101_00001_NRCALONG_trapsfilled.fits'], ids=['rate', 'rateints','trapsfilled'])
def test_NIRCam_stage1(run_pipeline, fitsdiff_default_kwargs, output):
    """
    Regression test of calwebb_detector1 pipeline performed on NIRCam data.
    """
    rtdata = run_pipeline
    rtdata.output = output
    rtdata.get_truth(os.path.join("truth/nircam/test_detector1pipeline", output))


    diff = FITSDiff(rtdata.output, rtdata.truth, **fitsdiff_default_kwargs)
    assert diff.identical, diff.report()
