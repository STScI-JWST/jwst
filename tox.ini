[tox]
envlist =
    py{37,38,39}-test{,-oldestdeps,-devdeps}{,-cov}
    style
    security
isolated_build = true

[testenv]
# tox environments are constructed with so-called 'factors' (or terms)
# separated by hyphens, e.g. test-devdeps-cov. Lines below starting with factor:
# will only take effect if that factor is included in the environment name. To
# see a list of example environments that can be run, along with a description,
# run:
#
#     tox -l -v
#
description =
    run tests
    devdeps: with the latest developer version of key dependencies
    oldestdeps: with the oldest supported version of key dependencies
    sdp: with dependencies pinned for current STScI DMS SDP release
    cov: and test coverage

# The following indicates which extras_require from setup.cfg will be installed
extras = test

# Pass through the following environment variables which may be needed for the CI
passenv = 
    TOXENV
    CI
    TRAVIS
    TRAVIS_*
    CODECOV_*
    HOME
    CRDS_*
    STRICT_VALIDATION
    PASS_INVALID_VALUES
    VALIDATE_ON_ASSIGNMENT

# Run the tests in a temporary directory to make sure that we don't import
# this package from the source tree
changedir = .tmp/{envname}

commands =
    pip freeze
    !cov: pytest --pyargs jwst {toxinidir}/docs {posargs}
    cov: pytest --pyargs jwst {toxinidir}/docs --cov jwst --cov-config={toxinidir}/setup.cfg {posargs}
    cov: coverage xml -o {toxinidir}/coverage.xml

[testenv:oldestdeps]
basepython = python3.7
install_command = python -m pip install --no-deps {packages}
commands_pre =
    # Generate a requirements-min.txt file
    minimum_deps
    pip install -r requirements-min.txt -e .[test]

[testenv:regtests]
commands =
    pytest --bigdata {posargs}

[testenv:twine]
deps =
    twine
    pep517
commands =
    python -m pep517.check .
    twine check {distdir}/*

[testenv:style]
description = check code style, e.g. with flake8
skip_install = true
changedir = .
commands =
    flake8 {posargs}

[testenv:verify-install-requires]
description = Verify that install_requires in setup.cfg is correct
extras =
commands =
    verify_install_requires

[testenv:sdp]
deps =
    -rrequirements-sdp.txt

[testenv:devdeps]
deps =
    -rrequirements-dev.txt

[testenv:warnings]
commands =
    pip freeze
    pytest --pyargs jwst {toxinidir}/docs -W error {posargs}

[testenv:security]
description = Run bandit to check security compliance
changedir = .
deps =
    bandit>=1.7
commands =
    # bandit -r jwst scripts -c .bandit.yaml -ll
    bandit -r -ll -x jwst/*test*,jwst/**/*test*,jwst/fits_generator jwst scripts

[testenv:docs]
description = invoke sphinx-build to build the HTML docs
extras = docs
changedir = docs
commands =
    pip freeze
    sphinx-build -W . ./_build
