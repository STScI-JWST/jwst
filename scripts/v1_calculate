#!/usr/bin/env python
"""V1 Calculation based on time and engineering database info
"""
import argparse
import logging
from sys import stdout

from astropy.table import Table

from jwst.lib import v1_calculate

log_handler = logging.StreamHandler()
logger = logging.getLogger('jwst.lib.v1_calculate')
logger.addHandler(log_handler)
LogLevels = [logging.WARNING, logging.INFO, logging.DEBUG]


# Begin execution
if __name__ == '__main__':

    parser = argparse.ArgumentParser(
        description='Calculate V1 over a time period.'
    )

    parser.add_argument(
        'exposures', type=str, nargs='+',
        help='List of JWST data files to examine.'
    )
    parser.add_argument(
        '-o', '--output', type=argparse.FileType('w'), default=stdout,
        help='File to write V1 calculation table to. Default is standard output.'
    )
    parser.add_argument(
        '-v', '--verbose', action='count', default=0,
        help='Increase verbosity. Specifying multiple times adds more output.'
    )
    parser.add_argument(
        '--engdb-url', type=str, default=None,
        help=('The engineering database to use. If unspecified, the value'
              ' of the environment ENG_BASE_URL is used. Otherwise, the production'
              ' system is used.'
              )
    )

    args = parser.parse_args()

    # Set output detail.
    level = LogLevels[min(len(LogLevels)-1, args.verbose)]
    logger.setLevel(level)

    # Process the file list.
    logger.info('Starting V1 calculation...')
    v1s = v1_calculate.v1_calculate_from_models(args.exposures, engdb_url=args.engdb_url)

    # Reformat table to be more readable:
    #     Ensure time is in a readable format.
    #     Separate out the V1 information.
    ras, decs, pa_v3s = list(map(list, zip(*v1s['v1'])))
    formatted = Table(
        [v1s['source'], v1s['obstime'].isot, ras, decs, pa_v3s],
        names=('source', 'obstime', 'RA', 'DEC', 'PA_V3')
    )
    formatted.write(args.output, format='ascii.ecsv')
    logger.info('...V1 calculation completed.')
