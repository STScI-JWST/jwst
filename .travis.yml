os: linux
dist: bionic
language: python
python: 3.8

env:
  global:
    - CRDS_SERVER_URL=https://jwst-crds.stsci.edu
    - CRDS_PATH=/tmp/crds_cache
    - CRDS_CLIENT_RETRY_COUNT=3
    - CRDS_CLIENT_RETRY_DELAY_SECONDS=20
    - TEST_COMMAND="pytest --cov-report=xml --cov=./"
    - PIP_DEPENDENCIES=.[test]

jobs:
  # Don't wait for allowed failures
  fast_finish: true

  include:
    - name: Latest dependency versions

    - name: Oldest dependency versions
      python: 3.6
      env:
        GEN_MIN_DEPS=true
        PIP_DEPENDENCIES="-r requirements-min.txt .[test]"

    - name: SDP dependencies in requirements-sdp.txt
      python: 3.7.7
      env:
        PIP_DEPENDENCIES="-r requirements-sdp.txt .[test]"
        TEST_COMMAND=pytest

    - name: Dev dependencies in requirements-dev.txt
      env:
        PIP_DEPENDENCIES="-r requirements-dev.txt .[test]"
        TEST_COMMAND=pytest

    - name: CRDS_CONTEXT=jwst-edit
      env: CRDS_CONTEXT=jwst-edit

    - name: Documentation
      env:
        PIP_DEPENDENCIES=.[docs]
        TEST_COMMAND="make html --directory=docs"
      addons:
        apt:
          packages:
            - graphviz

    - name: Code style check
      env:
        TEST_COMMAND=flake8
        PIP_DEPENDENCIES=flake8

  allow_failures:
    - name: Dev dependencies in requirements-dev.txt
      env:
        PIP_DEPENDENCIES="-r requirements-dev.txt .[test]"
        TEST_COMMAND=pytest

    - name: CRDS_CONTEXT=jwst-edit
      env: CRDS_CONTEXT=jwst-edit

install:
  - pip install --upgrade pip
  # For the case where we want to build with the minimum versions allowed by
  # setup.py
  - if [[ ${GEN_MIN_DEPS} = "true" ]]; then
      pip install . --no-deps;
      minimum_deps;
    fi
  - pip install $PIP_DEPENDENCIES

script:
  - $TEST_COMMAND

after_success:
  - if [[ ${TEST_COMMAND} =~ ^pytest ]]; then
      codecov -F unit;
    fi
